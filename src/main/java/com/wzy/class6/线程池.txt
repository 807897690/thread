cachePool  :  缓存，里面默认没有线程，默认60s之后，线程会被清空
singleThreadPool:默认只有一个线程
schedulThreadPool:定时执行线程
workStealingPool:任务窃取


线程池参数：核心线程数量大小、最大线程数量、线程存活时间、存活时间单位、线程任务队列、线程创建工厂、拒绝策略
当任务过多，线程池核心数量不够时，就会放入队列中等待，当等待队列也满时，就会开启线程，当线程池中的数量大于最大线程数时，
就会进行拒绝策略（四种策略）。
四种拒绝策略：
1、CallerRunsPolicy：该策略不会放弃任务，而是让调用execute本身的线程来执行，可能会导致整个程序中断；
2、AbortPolicy:这种策略直接抛出异常，丢弃任务，jdk默认策略
3、DiscardPolicy：不能执行的任务将被删除，和上个一样，只是不抛出异常
4、DiscardOldestPolicy：如果执行程序尚未关闭，则位于工作队列头部的任务将被删除，然后重试执行程序
  （如果再次失败，则重复此过程）
